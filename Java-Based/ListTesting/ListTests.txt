1) no list -> constructor -> []
  Tests:
    removeFirst() throws EmptyCollectionException
    removeLast() throws EmptyCollectionException
    remove(A) throws ElementNotFoundException
    first() throws EmptyCollectionException
    last() throws EmptyCollectionException
    contains(A) returns false
    isEmpty() returns true
    size() returns 0
    iterator() returns an Iterator reference
    toString returns "[]"
    addToFront(A) throws no Exception
    addToRear(A) throws no Exception
    addAfter(A, B) throws ElementNotFoundException
    remove(-1) throws IndexOutOfBoundsException
    remove(0) throws IndexOutOfBoundsException
    add(-1, A) throws IndexOutOfBoundsException
    add(0, A) throws no Exception
    add(1, A) throws IndexOutOfBoundsException
    add(A) throws no Exception
    get(-1) throws IndexOutOfBoundsException
    get(0) throws IndexOutOfBoundsException
    set(-1, A) throws IndexOutOfBoundsException
    set(0, A) throws IndexOutOfBoundsException
    indexOf(A) returns -1
2) [] -> addToFront(A) -> [A]
Tests:
    removeFirst() returns A
    removeLast() returns A
    remove(A) returns A
    first() returns A
    last() returns A
    contains(A) returns true
    isEmpty() returns false
    size() returns 1
    iterator() returns an Iterator reference
    toString returns "[A]"
    addToFront(A) throws no Exception
    addToRear(A) throws no Exception
    addAfter(A, B) returns B
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns A
    add(-1, A) throws IndexOutOfBoundsException
    add(0, A) throws no Exception
    add(1, A) throws IndexOutOfBoundsException
    add(A) throws no Exception
    get(-1) throws IndexOutOfBoundsException
    get(0) returns A
    set(-1, A) throws IndexOutOfBoundsException
    set(0, A) returns A
    indexOf(A) returns 0
3) [] -> addToRear(A) -> [A]
Tests:
    removeFirst() returns A
    removeLast() returns A
    remove(A) returns A
    first() returns A
    last() returns A
    contains(A) returns true
    isEmpty() returns false
    size() returns 1
    iterator() returns an Iterator reference
    toString returns "[A]"
    addToFront(A) throws no Exception
    addToRear(A) throws no Exception
    addAfter(A, B) returns B
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns A
    add(-1, A) throws IndexOutOfBoundsException
    add(0, A) throws no Exception
    add(1, A) throws IndexOutOfBoundsException
    add(A) throws no Exception
    get(-1) throws IndexOutOfBoundsException
    get(0) returns A
    set(-1, A) throws IndexOutOfBoundsException
    set(0, A) returns A
    indexOf(A) returns 0
4) [] -> add(A) -> [A]
Tests:
    removeFirst() returns A
    removeLast() returns A
    remove(A) returns A
    first() returns A
    last() returns A
    contains(A) returns true
    isEmpty() returns false
    size() returns 1
    iterator() returns an Iterator reference
    toString returns "[A]"
    addToFront(A) throws no Exception
    addToRear(A) throws no Exception
    addAfter(A, B) returns B
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns A
    add(-1, A) throws IndexOutOfBoundsException
    add(0, A) throws no Exception
    add(1, A) throws IndexOutOfBoundsException
    add(A) throws no Exception
    get(-1) throws IndexOutOfBoundsException
    get(0) returns A
    set(-1, A) throws IndexOutOfBoundsException
    set(0, A) returns A
    indexOf(A) returns 0
5) [] -> add(0,A) -> [A]
Tests:
    removeFirst() returns A
    removeLast() returns A
    remove(A) returns A
    first() returns A
    last() returns A
    contains(A) returns true
    isEmpty() returns false
    size() returns 1
    iterator() returns an Iterator reference
    toString returns "[A]"
    addToFront(A) throws no Exception
    addToRear(A) throws no Exception
    addAfter(A, B) returns B
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns A
    add(-1, A) throws IndexOutOfBoundsException
    add(0, A) throws no Exception
    add(1, A) throws IndexOutOfBoundsException
    add(A) throws no Exception
    get(-1) throws IndexOutOfBoundsException
    get(0) returns A
    set(-1, A) throws IndexOutOfBoundsException
    set(0, A) returns A
    indexOf(A) returns 0
6) [A] -> removeFirst() -> []
Tests:
    removeFirst() throws EmptyCollectionException
    removeLast() throws EmptyCollectionException
    remove(A) throws ElementNotFoundException
    first() throws EmptyCollectionException
    last() throws EmptyCollectionException
    contains(A) returns false
    isEmpty() returns true
    size() returns 0
    iterator() returns an Iterator reference
    toString returns "[]"
    addToFront(A) throws no Exception
    addToRear(A) throws no Exception
    addAfter(A, B) throws ElementNotFoundException
    remove(-1) throws IndexOutOfBoundsException
    remove(0) throws IndexOutOfBoundsException
    add(-1, A) throws IndexOutOfBoundsException
    add(0, A) throws no Exception
    add(1, A) throws IndexOutOfBoundsException
    add(A) throws no Exception
    get(-1) throws IndexOutOfBoundsException
    get(0) throws IndexOutOfBoundsException
    set(-1, A) throws IndexOutOfBoundsException
    set(0, A) throws IndexOutOfBoundsException
    indexOf(A) returns -1
7) [A] -> removeLast() -> []
 Tests:
    removeFirst() throws EmptyCollectionException
    removeLast() throws EmptyCollectionException
    remove(A) throws ElementNotFoundException
    first() throws EmptyCollectionException
    last() throws EmptyCollectionException
    contains(A) returns false
    isEmpty() returns true
    size() returns 0
    iterator() returns an Iterator reference
    toString returns "[]"
    addToFront(A) throws no Exception
    addToRear(A) throws no Exception
    addAfter(A, B) throws ElementNotFoundException
    remove(-1) throws IndexOutOfBoundsException
    remove(0) throws IndexOutOfBoundsException
    add(-1, A) throws IndexOutOfBoundsException
    add(0, A) throws no Exception
    add(1, A) throws IndexOutOfBoundsException
    add(A) throws no Exception
    get(-1) throws IndexOutOfBoundsException
    get(0) throws IndexOutOfBoundsException
    set(-1, A) throws IndexOutOfBoundsException
    set(0, A) returns A
    indexOf(A) returns -1
8) [A] -> remove(A) -> []
 Tests:
    removeFirst() throws EmptyCollectionException
    removeLast() throws EmptyCollectionException
    remove(A) throws ElementNotFoundException
    first() throws EmptyCollectionException
    last() throws EmptyCollectionException
    contains(A) returns false
    isEmpty() returns true
    size() returns 0
    iterator() returns an Iterator reference
    toString returns "[]"
    addToFront(A) throws no Exception
    addToRear(A) throws no Exception
    addAfter(A, B) throws ElementNotFoundException
    remove(-1) throws IndexOutOfBoundsException
    remove(0) throws IndexOutOfBoundsException
    add(-1, A) throws IndexOutOfBoundsException
    add(0, A) throws no Exception
    add(1, A) throws IndexOutOfBoundsException
    add(A) throws no Exception
    get(-1) throws IndexOutOfBoundsException
    get(0) throws IndexOutOfBoundsException
    set(-1, A) throws IndexOutOfBoundsException
    set(0, A) returns A
    indexOf(A) returns -1
9) [A] -> addToFront(B) -> [B,A]
  Tests:
    removeFirst() returns B
    removeLast() returns A
    remove(A) returns A
    remove(B) returns B
    remove(C) throws ElementNotFoundException
    first() returns B
    last() returns A
    contains(A) returns true
    contains(B) returns true
    contains(C) returns false
    isEmpty() returns false
    size() returns 2
    iterator() returns an Iterator reference
    toString() returns "[B, A]"
    addToFront(C) throws no Exceptions
    addToRear(C) throws no Exceptions
    addAfter(C, B) throws no Exceptions
    addAfter(C, A) throws no Exceptions
    addAfter(C, D) throws ElementNotFoundException
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns B
    remove(1) returns A
    remove(2) throws IndexOutOfBoundsException
    add(-1, C) throws IndexOutOfBoundsException
    add(0, C) throws no Exception
    add(1, C) throws no Exception
    add(2, C) throws no Exception
    add(3, C) throws IndexOutOfBoundsException
    add(C) throws no Exception
    get(-1) throws IndexOutOfBoundsException
    get(0) returns B
    get(1) returns A
    get(2) throws IndexOutOfBoundsException
    set(-1, C) throws IndexOutOfBoundsException
    set(0, C) throws no Exception
    set(1, C) throws no Exception
    set(2, C) throws IndexOutOfBoundsException
    indexOf(B) returns 0
    indexOf(A) returns 1
    indexOf(C) returns -1
10) [A] -> addToRear(B) -> [A,B]
  Tests:
    removeFirst() returns A
    removeLast() returns B
    remove(A) returns A
    remove(B) returns B
    remove(C) throws ElementNotFoundException
    first() returns A
    last() returns B
    contains(A) returns true
    contains(B) returns true
    contains(C) returns false
    isEmpty() returns false
    size() returns 2
    iterator() returns an Iterator reference
    toString() returns "[A, B]"
    addToFront(C) throws no Exceptions
    addToRear(C) throws no Exceptions
    addAfter(C, B) throws no Exceptions
    addAfter(C, A) throws no Exceptions
    addAfter(C, D) throws ElementNotFoundException
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns A
    remove(1) returns B
    remove(2) throws IndexOutOfBoundsException
    add(-1, C) throws IndexOutOfBoundsException
    add(0, C) throws no Exception
    add(1, C) throws no Exception
    add(2, C) throws no Exception
    add(3, C) throws IndexOutOfBoundsException
    add(C) throws no Exception
    get(-1) throws IndexOutOfBoundsException
    get(0) returns A
    get(1) returns B
    get(2) throws IndexOutOfBoundsException
    set(-1, C) throws IndexOutOfBoundsException
    set(0, C) throws no Exception
    set(1, C) throws no Exception
    set(2, C) throws IndexOutOfBoundsException
    indexOf(B) returns 0
    indexOf(A) returns 1
    indexOf(C) returns -1
11) [A] -> addAfter(B,A) -> [A,B]
12) [A] -> remove(0) -> []
Tests:
    removeFirst() throws EmptyCollectionException
    removeLast() throws EmptyCollectionException
    remove(A) throws ElementNotFoundException
    first() throws EmptyCollectionException
    last() throws EmptyCollectionException
    contains(A) returns false
    isEmpty() returns true
    size() returns 0
    iterator() returns an Iterator reference
    toString returns "[]"
    addToFront(A) throws no Exception
    addToRear(A) throws no Exception
    addAfter(A, B) throws ElementNotFoundException
    remove(-1) throws IndexOutOfBoundsException
    remove(0) throws IndexOutOfBoundsException
    add(-1, A) throws IndexOutOfBoundsException
    add(0, A) throws no Exception
    add(1, A) throws IndexOutOfBoundsException
    add(A) throws no Exception
    get(-1) throws IndexOutOfBoundsException
    get(0) throws IndexOutOfBoundsException
    set(-1, A) throws IndexOutOfBoundsException
    set(0, A) returns A
    indexOf(A) returns -1
13) [A] -> set(0,B) -> [B]
  Tests:
    removeFirst() returns B
    removeLast() returns B
    remove(A) throws ElementNotFoundException
    remove(B) returns B
    remove(C) throws ElementNotFoundException
    first() returns B
    last() returns B
    contains(A) returns false
    contains(B) returns true
    contains(C) returns false
    isEmpty() returns false
    size() returns 1
    iterator() returns an Iterator reference
    toString() returns "[B]"
    addToFront(C) throws no Exceptions
    addToRear(C) throws no Exceptions
    addAfter(C, B) throws no Exceptions
    addAfter(C, A) throws ElementNotFoundException
    addAfter(C, D) throws ElementNotFoundException
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns B
    remove(1) throws IndexOutOfBoundsException
    remove(2) throws IndexOutOfBoundsException
    add(-1, C) throws IndexOutOfBoundsException
    add(0, C) throws no Exception
    add(1, C) throws no Exception
    add(2, C) throws no Exception
    add(3, C) throws IndexOutOfBoundsException
    add(C) throws no Exception
    get(-1) throws IndexOutOfBoundsException
    get(0) returns B
    get(1) throws IndexOutOfBoundsException
    get(2) throws IndexOutOfBoundsException
    set(-1, C) throws IndexOutOfBoundsException
    set(0, C) throws no Exception
    set(1, C) throws no Exception
    set(2, C) throws IndexOutOfBoundsException
    indexOf(B) returns 0
    indexOf(A) returns -1
    indexOf(C) returns -1
14) [A] -> add(0,B) -> [B,A]
15) [A] -> add(1,B) -> [A,B]
16) [A,B] -> removeFirst() -> [B]  
  Tests:
    removeFirst() returns B
    removeLast() returns B
    remove(A) throws ElementNotFoundException
    remove(B) returns B
    remove(C) throws ElementNotFoundException
    first() returns B
    last() returns B
    contains(A) returns false
    contains(B) returns true
    contains(C) returns false
    isEmpty() returns false
    size() returns 1
    iterator() returns an Iterator reference
    toString() returns "[B]"
    addToFront(C) throws no Exceptions
    addToRear(C) throws no Exceptions
    addAfter(C, B) throws no Exceptions
    addAfter(C, A) throws ElementNotFoundException
    addAfter(C, D) throws ElementNotFoundException
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns B
    remove(1) throws IndexOutOfBoundsException
    remove(2) throws IndexOutOfBoundsException
    add(-1, C) throws IndexOutOfBoundsException
    add(0, C) throws no Exception
    add(1, C) throws no Exception
    add(2, C) throws no Exception
    add(3, C) throws IndexOutOfBoundsException
    add(C) throws no Exception
    get(-1) throws IndexOutOfBoundsException
    get(0) returns B
    get(1) throws IndexOutOfBoundsException
    get(2) throws IndexOutOfBoundsException
    set(-1, C) throws IndexOutOfBoundsException
    set(0, C) throws no Exception
    set(1, C) throws no Exception
    set(2, C) throws IndexOutOfBoundsException
    indexOf(B) returns 0
    indexOf(A) returns -1
    indexOf(C) returns -1
17) [A,B] -> removeLast() -> [A]
  Tests:
    removeFirst() returns A
    removeLast() returns A
    remove(A) returns A
    remove(B) throws ElementNotFoundException
    remove(C) throws ElementNotFoundException
    first() returns A
    last() returns A
    contains(A) returns true
    contains(B) returns false
    contains(C) returns false
    isEmpty() returns false
    size() returns 1
    iterator() returns an Iterator reference
    toString() returns "[A]"
    addToFront(C) throws no Exceptions
    addToRear(C) throws no Exceptions
    addAfter(C, B) throws ElementNotFoundException
    addAfter(C, A) throws no Exceptions
    addAfter(C, D) throws ElementNotFoundException
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns A
    remove(1) throws IndexOutOfBoundsException
    remove(2) throws IndexOutOfBoundsException
    add(-1, C) throws IndexOutOfBoundsException
    add(0, C) throws no Exception
    add(1, C) throws no Exception
    add(2, C) throws no Exception
    add(3, C) throws IndexOutOfBoundsException
    add(C) throws no Exception
    get(-1) throws IndexOutOfBoundsException
    get(0) returns A
    get(1) throws IndexOutOfBoundsException
    get(2) throws IndexOutOfBoundsException
    set(-1, C) throws IndexOutOfBoundsException
    set(0, C) throws no Exception
    set(1, C) throws no Exception
    set(2, C) throws IndexOutOfBoundsException
    indexOf(B) returns -1
    indexOf(A) returns 0
    indexOf(C) returns -1
18) [A,B] -> remove(A) -> [B]
  Tests:
    removeFirst() returns B
    removeLast() returns B
    remove(A) throws ElementNotFoundException
    remove(B) returns B
    remove(C) throws ElementNotFoundException
    first() returns B
    last() returns B
    contains(A) returns false
    contains(B) returns true
    contains(C) returns false
    isEmpty() returns false
    size() returns 1
    iterator() returns an Iterator reference
    toString() returns "[B]"
    addToFront(C) throws no Exceptions
    addToRear(C) throws no Exceptions
    addAfter(C, B) throws no Exceptions
    addAfter(C, A) throws ElementNotFoundException
    addAfter(C, D) throws ElementNotFoundException
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns B
    remove(1) throws IndexOutOfBoundsException
    remove(2) throws IndexOutOfBoundsException
    add(-1, C) throws IndexOutOfBoundsException
    add(0, C) throws no Exception
    add(1, C) throws no Exception
    add(2, C) throws no Exception
    add(3, C) throws IndexOutOfBoundsException
    add(C) throws no Exception
    get(-1) throws IndexOutOfBoundsException
    get(0) returns B
    get(1) throws IndexOutOfBoundsException
    get(2) throws IndexOutOfBoundsException
    set(-1, C) throws IndexOutOfBoundsException
    set(0, C) throws no Exception
    set(1, C) throws no Exception
    set(2, C) throws IndexOutOfBoundsException
    indexOf(B) returns 0
    indexOf(A) returns -1
    indexOf(C) returns -1
19) [A,B] -> remove(B) -> [A]
  Tests:
    removeFirst() returns A
    removeLast() returns A
    remove(A) returns A
    remove(B) throws ElementNotFoundException
    remove(C) throws ElementNotFoundException
    first() returns A
    last() returns A
    contains(A) returns true
    contains(B) returns false
    contains(C) returns false
    isEmpty() returns false
    size() returns 1
    iterator() returns an Iterator reference
    toString() returns "[A]"
    addToFront(C) throws no Exceptions
    addToRear(C) throws no Exceptions
    addAfter(C, B) throws ElementNotFoundException
    addAfter(C, A) throws no Exceptions
    addAfter(C, D) throws ElementNotFoundException
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns A
    remove(1) throws IndexOutOfBoundsException
    remove(2) throws IndexOutOfBoundsException
    add(-1, C) throws IndexOutOfBoundsException
    add(0, C) throws no Exception
    add(1, C) throws no Exception
    add(2, C) throws no Exception
    add(3, C) throws IndexOutOfBoundsException
    add(C) throws no Exception
    get(-1) throws IndexOutOfBoundsException
    get(0) returns A
    get(1) throws IndexOutOfBoundsException
    get(2) throws IndexOutOfBoundsException
    set(-1, C) throws IndexOutOfBoundsException
    set(0, C) throws no Exception
    set(1, C) throws no Exception
    set(2, C) throws IndexOutOfBoundsException
    indexOf(B) returns -1
    indexOf(A) returns 0
    indexOf(C) returns -1
20) [A,B] -> addToFront(C) -> [C,A,B]
21) [A,B] -> addToRear(C) -> [A,B,C]
22) [A,B] -> addAfter(C,A) -> [A,C,B]
23) [A,B] -> addAfter(C,B) -> [A,B,C]
24) [A,B] -> remove(0) -> [B] <-------------------
  Tests:
    addToFront(A) throws no Exception
    addToRear(A) throws no Exception
    add(0, A) throws no Exception
    add(A) throws no Exception
    addToFront(A) throws no Exception
    addToRear(A) throws no Exception
    add(0, A) throws no Exception
    add(A) throws no Exception
    removeFirst() throws no Exception
    remove(A) throws no Exception
25) [A,B] -> remove(1) -> [A] <-------------------
  Tests:
    addToFront(A) throws no Exception
    addToRear(A) throws no Exception
    add(0, A) throws no Exception
    add(A) throws no Exception
    addToFront(A) throws no Exception
    addToRear(A) throws no Exception
    add(0, A) throws no Exception
    add(A) throws no Exception
    removeFirst() throws no Exception
    remove(A) throws no Exception
26) [A,B] -> set(0,C) -> [C,B]
27) [A,B] -> set(1,C) -> [A,C]
28) [A,B] -> add(C) -> [A,B,C]
  Tests:
    removeFirst() returns A
    removeLast() returns C
    remove(A) returns A
    remove(B) returns B
    remove(C) returns C
    first() returns A
    last() returns C
    contains(A) returns true
    contains(B) returns true
    contains(C) returns true
    isEmpty() returns false
    size() returns 3
    iterator() returns an Iterator reference
    toString() returns "[A, B, C]"
    addToFront(D) throws no Exceptions
    addToRear(D) throws no Exceptions
    addAfter(D, A) throws no Exceptions
    addAfter(D, C) throws no Exceptions
    addAfter(D, B) throws no Exceptions
    add(-1, D) throws IndexOutOfBoundsException
    add(0, D) throws no Exception
    add(1, D) throws no Exception
    add(2, D) throws no Exception
    add(3, D) throws no Exception
    set(-1, D) throws IndexOutOfBoundsException
    set(0, D) throws no Exception
    set(1, D) throws no Exception
    set(2, D) throws no Exception
    add(D) throws no Exception
    get(-1) throws IndexOutOfBoundsException
    get(0) returns A
    get(1) returns B
    get(2) returns C
    indexOf(A) returns 0
    indexOf(B) returns 1
    indexOf(C) returns 2
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns A
    remove(1) returns B
    remove(2) returns C
29) [A,B] -> add(0,C) -> [C,A,B]
  Tests:
    removeFirst() returns C
    removeLast() returns B
    remove(A) returns A
    remove(B) returns B
    remove(C) returns C
    first() returns C
    last() returns B
    contains(A) returns true
    contains(B) returns true
    contains(C) returns true
    isEmpty() returns false
    size() returns 3
    iterator() returns an Iterator reference
    toString() returns "[C, A, B]"
    addToFront(D) throws no Exceptions
    addToRear(D) throws no Exceptions
    addAfter(D, A) throws no Exceptions
    addAfter(D, C) throws no Exceptions
    addAfter(D, B) throws no Exceptions
    add(-1, D) throws IndexOutOfBoundsException
    add(0, D) throws no Exception
    add(1, D) throws no Exception
    add(2, D) throws no Exception
    add(3, D) throws no Exception
    set(-1, D) throws IndexOutOfBoundsException
    set(0, D) throws no Exception
    set(1, D) throws no Exception
    set(2, D) throws no Exception
    add(D) throws no Exception
    get(-1) throws IndexOutOfBoundsException
    get(0) returns C
    get(1) returns A
    get(2) returns B
    indexOf(A) returns 1
    indexOf(B) returns 2
    indexOf(C) returns 0
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns C
    remove(1) returns A
    remove(2) returns B
30) [A,B] -> add(1,C) -> [A,C,B]
31) [A,B] -> add (2,C) -> [A,B,C]
32) [A,B,C] -> removeFirst() -> [B,C]
33) [A,B,C] -> removeLast() -> [A,B]
34) [A,B,C] -> remove(A) -> [B,C]
35) [A,B,C] -> remove(B) -> [A,C]
36) [A,B,C] -> remove(C) -> [A,B]
37) [A,B,C] -> remove(0) -> [B,C]
  Tests:
    removeFirst() returns B
    removeLast() returns C
    remove(A) throws ElementNotFoundException
    remove(B) returns B
    remove(C) returns C
    first() returns B
    last() returns C
    contains(A) returns false
    contains(B) returns true
    contains(C) returns true
    isEmpty() returns false
    size() returns 2
    iterator() returns an Iterator reference
    toString() returns "[B, C]"
    addToFront(D) throws no Exceptions
    addToRear(D) throws no Exceptions
    addAfter(D, A) throws ElementNotFoundException
    addAfter(D, C) throws no Exceptions
    addAfter(D, B) throws no Exceptions
    add(-1, D) throws IndexOutOfBoundsException
    add(0, D) throws no Exception
    add(1, D) throws no Exception
    add(2, D) throws no Exception
    add(3, D) throws IndexOutOfBoundsException
    set(-1, D) throws IndexOutOfBoundsException
    set(0, D) throws no Exception
    set(1, D) throws no Exception
    set(2, D) throws IndexOutOfBoundsException
    add(D) throws no Exception
    get(-1) throws IndexOutOfBoundsException
    get(0) returns B
    get(1) returns C
    get(2) throws IndexOutOfBoundsException
    indexOf(A) returns -1
    indexOf(B) returns 0
    indexOf(C) returns 1
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns B
    remove(1) returns C
    remove(2) throws IndexOutOfBoundsException
38) [A,B,C] -> remove(1) -> [A,C]
  Tests:
    removeFirst() returns A
    removeLast() returns C
    remove(A) returns A
    remove(B) throws ElementNotFoundException
    remove(C) returns C
    first() returns A
    last() returns C
    contains(A) returns true
    contains(B) returns false
    contains(C) returns true
    isEmpty() returns false
    size() returns 2
    iterator() returns an Iterator reference
    toString() returns "[A, C]"
    addToFront(D) throws no Exceptions
    addToRear(D) throws no Exceptions
    addAfter(D, A) throws no Exceptions
    addAfter(D, C) throws no Exceptions
    addAfter(D, B) throws ElementNotFoundException
    add(-1, D) throws IndexOutOfBoundsException
    add(0, D) throws no Exception
    add(1, D) throws no Exception
    add(2, D) throws no Exception
    add(3, D) throws IndexOutOfBoundsException
    set(-1, D) throws IndexOutOfBoundsException
    set(0, D) throws no Exception
    set(1, D) throws no Exception
    set(2, D) throws IndexOutOfBoundsException
    add(D) throws no Exception
    get(-1) throws IndexOutOfBoundsException
    get(0) returns A
    get(1) returns C
    get(2) throws IndexOutOfBoundsException
    indexOf(A) returns 0
    indexOf(B) returns -1
    indexOf(C) returns 1
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns A
    remove(1) returns C
    remove(2) throws IndexOutOfBoundsException
39) [A,B,C] -> remove(2) -> [A,B]
  Tests:
    removeFirst() returns A
    removeLast() returns B
    remove(A) returns A
    remove(B) returns B
    remove(C) throws ElementNotFoundException
    first() returns A
    last() returns B
    contains(A) returns true
    contains(B) returns true
    contains(C) returns false
    isEmpty() returns false
    size() returns 2
    iterator() returns an Iterator reference
    toString() returns "[A, B]"
    addToFront(D) throws no Exceptions
    addToRear(D) throws no Exceptions
    addAfter(D, A) throws no Exceptions
    addAfter(D, B) throws no Exceptions
    addAfter(D, C) throws ElementNotFoundException
    add(-1, D) throws IndexOutOfBoundsException
    add(0, D) throws no Exception
    add(1, D) throws no Exception
    add(2, D) throws no Exception
    add(3, D) throws IndexOutOfBoundsException
    set(-1, D) throws IndexOutOfBoundsException
    set(0, D) throws no Exception
    set(1, D) throws no Exception
    set(2, D) throws IndexOutOfBoundsException
    add(D) throws no Exception
    get(-1) throws IndexOutOfBoundsException
    get(0) returns A
    get(1) returns B
    get(2) throws IndexOutOfBoundsException
    indexOf(A) returns 0
    indexOf(B) returns 1
    indexOf(C) returns -1
    remove(-1) throws IndexOutOfBoundsException
    remove(0) returns A
    remove(1) returns B
    remove(2) throws IndexOutOfBoundsException
40) [A,B,C] -> set(0,D) -> [D,B,C]
41) [A,B,C] -> set(1,D) -> [A,D,C]
42) [A,B,C] -> set(2,D) -> [A,B,D]
